'XY_IV  Script to output values for IV curves from two xy files generated by the "multiSweep" script from step protocols. One
'file holds the command and the other the response traces.

'You assign the two xy files and then get asked to place 6 cursors to determine the 3 regions to analyze:
' 1) The baseline (needed for amplitude measurement)
' 2) Window 1, which (if applicable) should include peaks or troughs in all sweeps.
' 3) Window 2, which should be towards the end of the step (e.g, steady state response)

' The script allows you to copy the cursor positions over from one file to the other, but you can always change any of the cursors
'until you hit "OK".

'Returned are the mean absolute values and mean amplitudes for the baseline and Window 2, as well as mean, maximum and minimum values
'and the associated times for Window 1. If you are looking at passive responses, you can ignore the max and min values. If you are
'looking at positive responses (e.g., outward currents), ignore the min values. If you are looking at negative responses (e.g., inward
'currents), ignore the max values.

'Dirk Bucher, April 2013

var nViews%, vlist%[256];

nViews%:=ViewList(vlist%[],4096);

if nViews%<2 then
    Message("you need 2 XY views");
    FrontView(App(3));
    FileClose(0);
endif

var vTitle$[256],k%;
for k%:=1 to nViews% do
    FrontView(vlist%[k%]);
    vTitle$[k%]:=WindowTitle$();
next


var ok%,cmdTitleInd%, rspTitleInd%;
DlgCreate("Assign XY Views");
DlgText("COMMAND:",3,2);
DlgList(1,40,vTitle$[1:nViews%],100,3,3);
DlgText("RESPONSE:",3,4);
DlgList(2,40,vTitle$[1:nViews%],100,3,5);
ok%:=DlgShow(cmdTitleInd%,rspTitleInd%);

if ok%=0 then
    FrontView(App(3));
    Fileclose(0);
endif

var cmdTitle$,rspTitle$, cmdVh%, rspVh%;
cmdTitle$:=vTitle$[cmdTitleInd%+1];
rspTitle$:=vTitle$[rspTitleInd%+1];
cmdVh%:=ViewFind(cmdTitle$);
rspVh%:=ViewFind(rspTitle$);

var nPtsCmd%, nPtsRsp%,xCmd[1000000], yCmd[1000000], xRsp[1000000],yRsp[1000000];
var tStartCmd, tEndCmd, DurCmd, dtCmd, tStartRsp, tEndRsp, DurRsp, dtRsp;

FrontView(cmdVh%);
nPtsCmd%:=XYGetData(1,xCmd[], yCmd[]);
tStartCmd:=xCmd[0];
tEndCmd:=xCmd[nPtsCmd%-1];
DurCmd:=tEndCmd-tStartCmd;
dtCmd:=DurCmd/(nPtsCmd%-1);
CursorSet(0);
CursorSet(6);
CursorLabel(4,1,"base start");
CursorLabelPos(1,90);
CursorLabel(4,2,"base end");
CursorLabelPos(2,10);
CursorLabel(4,3,"window 1 start");
CursorLabelPos(3,90);
CursorLabel(4,4,"window 1 end");
CursorLabelPos(4,10);
CursorLabel(4,5,"window 2 start");
CursorLabelPos(5,90);
CursorLabel(4,6,"window 2 end");
CursorLabelPos(6,10);
WindowSize(67,50);
Window(0,50);

FrontView(rspVh%);
nPtsRsp%:=XYGetData(1,xRsp[],yRsp[]);
tStartRsp:=xRsp[0];
tEndRsp:=xRsp[nPtsRsp%-1];
DurRsp:=tEndRsp-tStartRsp;
dtRsp:=DurRsp/(nPtsRsp%-1);
CursorSet(0);
CursorSet(6);
CursorLabel(4,1,"base start");
CursorLabelPos(1,90);
CursorLabel(4,2,"base end");
CursorLabelPos(2,10);
CursorLabel(4,3,"window 1 start");
CursorLabelPos(3,90);
CursorLabel(4,4,"window 1 end");
CursorLabelPos(4,10);
CursorLabel(4,5,"window 2 start");
CursorLabelPos(5,90);
CursorLabel(4,6,"window 2 end");
CursorLabelPos(6,10);
WindowSize(67,50);
Window(0,0);

var button%;
var curInd1,curRel1, targetInd1%, targetT1;
var curInd2,curRel2, targetInd2%, targetT2;
var curInd3,curRel3, targetInd3%, targetT3;
var curInd4,curRel4, targetInd4%, targetT4;
var curInd5,curRel5, targetInd5%, targetT5;
var curInd6,curRel6, targetInd6%, targetT6;

repeat
    button%:=Interact("set cursors",511,0,"ok","copy cur Cmd->Rsp","copy cur Rsp->Cmd");
    
    if button%=2 then
        
        Frontview(cmdVh%);
        curInd1:=(Cursor(1)-tStartCmd)/dtCmd;
        curRel1:=(curInd1/nPtsCmd%);
        curInd2:=(Cursor(2)-tStartCmd)/dtCmd;
        curRel2:=(curInd2/nPtsCmd%);
        curInd3:=(Cursor(3)-tStartCmd)/dtCmd;
        curRel3:=(curInd3/nPtsCmd%);
        curInd4:=(Cursor(4)-tStartCmd)/dtCmd;
        curRel4:=(curInd4/nPtsCmd%);
        curInd5:=(Cursor(5)-tStartCmd)/dtCmd;
        curRel5:=(curInd5/nPtsCmd%);
        curInd6:=(Cursor(6)-tStartCmd)/dtCmd;
        curRel6:=(curInd6/nPtsCmd%);

        FrontView(rspVh%);
        targetInd1%:=Round(nPtsRsp%*curRel1);
        targetT1:=xRsp[targetInd1%];
        Cursor(1,targetT1);
        targetInd2%:=Round(nPtsRsp%*curRel2);
        targetT2:=xRsp[targetInd2%];
        Cursor(2,targetT2);
        targetInd3%:=Round(nPtsRsp%*curRel3);
        targetT3:=xRsp[targetInd3%];
        Cursor(3,targetT3);
        targetInd4%:=Round(nPtsRsp%*curRel4);
        targetT4:=xRsp[targetInd4%];
        Cursor(4,targetT4);
        targetInd5%:=Round(nPtsRsp%*curRel5);
        targetT5:=xRsp[targetInd5%];
        Cursor(5,targetT5);
        targetInd6%:=Round(nPtsRsp%*curRel6);
        targetT6:=xRsp[targetInd6%];
        Cursor(6,targetT6);
        
    endif
    
    if button%=3 then
        
        FrontView(rspVh%);
        curInd1:=(Cursor(1)-tStartRsp)/dtRsp;
        curRel1:=(curInd1/nPtsRsp%);
        curInd2:=(Cursor(2)-tStartRsp)/dtRsp;
        curRel2:=(curInd2/nPtsRsp%);
        curInd3:=(Cursor(3)-tStartRsp)/dtRsp;
        curRel3:=(curInd3/nPtsRsp%);
        curInd4:=(Cursor(4)-tStartRsp)/dtRsp;
        curRel4:=(curInd4/nPtsRsp%);
        curInd5:=(Cursor(5)-tStartRsp)/dtRsp;
        curRel5:=(curInd5/nPtsRsp%);
        curInd6:=(Cursor(6)-tStartRsp)/dtRsp;
        curRel6:=(curInd6/nPtsRsp%);
        
        Frontview(cmdVh%);
        targetInd1%:=Round(nPtsCmd%*curRel1);
        targetT1:=xCmd[targetInd1%];
        Cursor(1,targetT1);
        targetInd2%:=Round(nPtsCmd%*curRel2);
        targetT2:=xCmd[targetInd2%];
        Cursor(2,targetT2);
        targetInd3%:=Round(nPtsCmd%*curRel3);
        targetT3:=xCmd[targetInd3%];
        Cursor(3,targetT3);
        targetInd4%:=Round(nPtsCmd%*curRel4);
        targetT4:=xCmd[targetInd4%];
        Cursor(4,targetT4);
        targetInd5%:=Round(nPtsCmd%*curRel5);
        targetT5:=xCmd[targetInd5%];
        Cursor(5,targetT5);
        targetInd6%:=Round(nPtsCmd%*curRel6);
        targetT6:=xCmd[targetInd6%];
        Cursor(6,targetT6);
    endif
            
until
button%=1;

var j%, nChan%, channels%[256], curIndBase1%, curIndBase2%;
var curIndWin1a%, curIndWin1b%,curIndWin2a%, curIndWin2b%;
var curIndBaseR1%, curIndBaseR2%, curIndWin1aR%, curIndWin1bR%, curIndWin2aR%, curIndWin2bR%;
var XbaseCmdChunk[1000000], YbaseCmdChunk[1000000], nBaseCmdPts%, baseCmdMean;
var XWin1CmdChunk[1000000], YWin1CmdChunk[1000000], nWin1CmdPts%, Win1CmdMean;
var XWin2CmdChunk[1000000], YWin2CmdChunk[1000000], nWin2CmdPts%, Win2CmdMean;
var XbaseRspChunk[1000000], YbaseRspChunk[1000000], nBaseRspPts%, baseRspMean;
var XWin1RspChunk[1000000], YWin1RspChunk[1000000], nWin1RspPts%, Win1RspMean, RspMax, RspMaxT, RspMin, RspMinT;
var XWin2RspChunk[1000000], YWin2RspChunk[1000000], nWin2RspPts%, Win2RspMean;

FrontView(cmdVh%);
nChan%:=ChanList(channels%[]);
curIndBase1%:=Round((Cursor(1)-tStartCmd)/dtCmd);
curIndBase2%:=Round((Cursor(2)-tStartCmd)/dtCmd);
curIndWin1a%:=Round((Cursor(3)-tStartCmd)/dtCmd);
curIndWin1b%:=Round((Cursor(4)-tStartCmd)/dtCmd);
curIndWin2a%:=Round((Cursor(5)-tStartCmd)/dtCmd);
curIndWin2b%:=Round((Cursor(6)-tStartCmd)/dtCmd);
FrontView(rspVh%);
curIndBaseR1%:=Round((Cursor(1)-tStartRsp)/dtRsp);
curIndBaseR2%:=Round((Cursor(2)-tStartRsp)/dtRsp);
curIndWin1aR%:=Round((Cursor(3)-tStartRsp)/dtRsp);
curIndWin1bR%:=Round((Cursor(4)-tStartRsp)/dtRsp);
curIndWin2aR%:=Round((Cursor(5)-tStartRsp)/dtRsp);
curIndWin2bR%:=Round((Cursor(6)-tStartRsp)/dtRsp);
Printlog("Cmd base mean, Cmd Win1 mean, Cmd Win1 mean amp, Cmd Win2 mean, Cmd Win2 amp, Rsp base mean, Rsp Win1 max, Rsp Win1 max amp, ");
Printlog("Rsp Win 1 max time, Rsp Win1 min, Rsp Win 1 min amp, Rsp 1 min time, Rsp Win1 mean, Rsp Win 1 mean amp, Rsp Win2 mean, Rsp Win2 mean amp\n");


for j%:=1 to nChan% step 1 do
    FrontView(cmdVh%);
    nBaseCmdPts%:=XYGetData(channels%[j%],XbaseCmdChunk[],YbaseCmdChunk[], curIndBase1%, curIndBase2%);
    ArrSum(YbaseCmdChunk[1:nBaseCmdPts%], baseCmdMean);
    nWin1CmdPts%:=XYGetData(channels%[j%],XWin1CmdChunk[],YWin1CmdChunk[],curIndWin1a%,curIndWin1b%);
    ArrSum(YWin1CmdChunk[1:nWin1CmdPts%],Win1CmdMean);
    nWin2CmdPts%:=XYGetData(channels%[j%],XWin2CmdChunk[],YWin2CmdChunk[],curIndWin2a%,curIndWin2b%);
    ArrSum(YWin2CmdChunk[1:nWin2CmdPts%],Win2CmdMean);
    FrontView(rspVh%);
    nBaseRspPts%:=XYGetData(channels%[j%],XbaseRspChunk[],YbaseRspChunk[], curIndBaseR1%, curIndBaseR2%);
    ArrSum(YbaseRspChunk[1:nBaseRspPts%], baseRspMean);
    nWin1RspPts%:=XYGetData(channels%[j%],XWin1RspChunk[],YWin1RspChunk[],curIndWin1aR%,curIndWin1bR%);
    ArrSum(YWin1RspChunk[1:nWin1RspPts%],Win1RspMean);
    ArrSort(YWin1RspChunk[1:nWin1RspPts%],1,XWin1RspChunk[1:nWin1RspPts%]);
    RspMax:=YWin1RspChunk[2];
    RspMaxT:=XWin1RspChunk[2];
    
    ArrSort(YWin1RspChunk[1:nWin1RspPts%],0,XWin1RspChunk[1:nWin1RspPts%]);
    RspMin:=YWin1RspChunk[2];
    RspMinT:=XWin1RspChunk[2];
    
    
    nWin2RspPts%:=XYGetData(channels%[j%],XWin2RspChunk[],YWin2RspChunk[],curIndWin2aR%,curIndWin2bR%);
    ArrSum(YWin2RspChunk[1:nWin2RspPts%],Win2RspMean);
    PrintLog("%f,%f,%f,%f,%f,",baseCmdMean, Win1CmdMean, Win1CmdMean-baseCmdMean, Win2CmdMean, Win2CmdMean-baseCmdMean);
    Printlog("%f,%f,%f,%f,%f,%f,%f,",baseRspMean, rspmax, rspmax-baseRspMean, rspmaxt, RspMin, RspMin-baseRspMean, RspMinT);
    Printlog("%f,%f,%f,%f\n",Win1RspMean, Win1RspMean-baseRspMean, Win2RspMean, Win2RspMean-baseRspMean);
    
next

Frontview (LogHandle ());
WindowSize(33,100);
Window(67,0);
FrontView (App (3));
FileClose (0);





    












