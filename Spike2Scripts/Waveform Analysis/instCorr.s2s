'Script to do fast scatterplots of EPSP or EJP amplitudes from 2 waveform channels to see if they are correlated. You need two waveform channels
'and an event channel holding the stimulus time. You have to type in a time range with fixed distance from every event that is used to average the
'voltage to obtain the baseline. Then you set the time range where your signal of interest takes place.

'dirk bucher 2005

'--------------------------------------------------------------------------------------------

'setting the file to process

if ViewKind() <> 0 then		'checks if the associated window is a time view
   Message("This isn't a time view!");
	FrontView (App (3));		'brings script to front...
	FileClose (0);				'...and closes it
endif

WindowVisible (3);		'sets the time view to the front

'--------------------------------------------------------------------------------------------

'setting the analysis time:

var ok%, cur1, cur2, wholefile%;	'sets variable expressions	

if Cursor (2)<Cursor (1) or Cursor (1)=-1 or Cursor (2)=-1 then ' if Cursor (1) and Cursor (2) are  not present or not in the right order...
																					 '	...a dialog is created to ask if you want to analyse the whole file.	
	DlgCreate ("ATTENTION!");
	DlgText ("Cursor (1) and (2) not set correctly.",2,1);
	DlgLabel	(1, "Analyse whole file?",2,2);
	ok%:=DlgShow (wholefile%);

	if ok%=1 then					'if you answer "ok",...
		cur1:= 0;					'...start and end are set to whole file									
		cur2:= MaxTime ();
	else								'if you answer "cancel",...
	FrontView (App (3));		'brings script to front...
	FileClose (0);				'...and closes it
	endif

else									' if Cursor (1) and Cursor (2) are present and in the right order...
	cur1 := Cursor(1);			'...their values are returned as start and end time.
	cur2 := Cursor(2);
endif

'-----------------------------------------------------------------------------------------------------------------------
var stimch%, wavech1%, wavech2%, time1, time2, time3, time4;

DlgCreate ("Analyse triggered PSPs");	
DlgText ("Assign channels:", 1,1);
DlgChan (1,"Waveform channel 1:", 1, 0, 2);
DlgChan (2,"Waveform channel 2:", 1, 0, 3);
DlgChan (3,"Stimulus channel:", 10, 0, 4);
DlgText ("Define a time window to average the baseline:", 1,6);
DlgReal (4, "Start after stimulus [ms]", -20000,20000, 0, 7);
DlgReal (5, "End after stimulus [ms]", -20000,20000, 0, 8);
DlgText ("Define a time window for the response:", 1,10);
DlgReal (6, "Start after stimulus [ms]", -20000,20000, 0, 11);
DlgReal (7, "End after stimulus [ms]", -20000,20000, 0, 12);
DlgText ("", 1, 13);
time1:=-500;
time2:=-50;
time3:=15;
time4:=500;

DlgShow (wavech1%, wavech2%, stimch%, time1, time2, time3, time4);

if stimch%<1 or wavech1%<1 or wavech2%<1 then		'checks if both burstchannels are assigned and different from each other.
	Message ("No valid channel assignment!");						'if not, message pops up and...
	FrontView (App (3));		'brings script to front...
	FileClose (0);				'...and closes it
endif

if time1>=time2 or time3>=time4 then
	Message ("Invalid time windows!");
	FrontView (App (3));		'brings script to front...
	FileClose (0);				'...and closes it
endif

var t1, t2, t3, t4;
t1:= time1/1000;
t2:= time2/1000;
t3:= time3/1000;
t4:= time4/1000;

'-----------------------------------------------------------------------------------------------------------------------

var minX%, maxX%, minY%, maxY%, stimulus[10000], nStim%, xval[10000], yval[10000], count%[1], title$, xy%, limit%;
var j%;	'counter
 

nStim%:= ChanData (stimch%, stimulus[],cur1, cur2);

var	baseline1, baseline2, Peak1, Peak2, Amp1, Amp2;

for j% := 0 to nStim%-2 step 1 do		' loop through all complete cycles

baseline1:= ChanMeasure (wavech1%, 2, stimulus[j%]+t1,stimulus[j%]+t2);

Peak1:= ChanMeasure(wavech1%, 8, stimulus[j%]+t3,stimulus[j%]+t4);

xval[j%]:= Peak1-baseline1;

baseline2:= ChanMeasure (wavech2%, 2, stimulus[j%]+t1,stimulus[j%]+t2);

Peak2:= ChanMeasure(wavech2%, 8, stimulus[j%]+t3,stimulus[j%]+t4);

yval[j%]:= Peak2-baseline2;

ArrAdd(count%[], 1);




next

limit%:=ArrSum(count%[])-1;
title$:= WindowTitle$();
minX%:=Min(xval[:limit%]);
maxX%:=Max(xval[]);
xy%:=FileNew(12);													'creates xy-view
Frontview (ViewFind(title$));									'returns time view to the front

FrontView(xy%);																'brings xy-view to the front
XYSetChan(0);																
XYAddData(1, xval[:limit%],yval[:limit%]);				'plots xy-values
XYDrawMode(1,1,0);
XYDrawMode(1,2,7);		
FrontView(xy%);
XRange(xval[minX%], xval[maxX%]);
Optimise(-1);
Draw();

FrontView (App (3));		'brings script to front...
FileClose (0);				'...and closes it


